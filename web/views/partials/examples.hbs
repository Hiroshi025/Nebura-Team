 <div class="page-section" id="examples">
  <h2
    class="glitch"
    data-text="API CODE EXAMPLES"
    style="font-weight: 700; font-size: 24px; margin-bottom: 25px; text-align: center"
    data-lang-key="code-examples">
    API CODE EXAMPLES
  </h2>

  <!-- Interactive Code Controls -->
  <div class="code-interactive">
    <div class="code-controls">
      <div class="control-group">
        <label class="control-label" data-lang-key="api-endpoint">API
          Endpoint:</label>
        <select class="control-select" id="apiEndpoint">
          <option value="waifu">Get Anime Waifu</option>
          <option value="anime">Get Anime List</option>
          <option value="character">Get Character Info</option>
          <option value="search">Search Anime</option>
          <option value="create">Create Anime (POST)</option>
          <option value="paginate">Paginate & Filter</option>
          <option value="auth">API Authentication</option>
          <option value="error">Error Handling</option>
          <option value="axios">Axios (JS/React)</option>
          <option value="requests">Requests (Python)</option>
        </select>
      </div>
      <div class="control-group">
        <label class="control-label" data-lang-key="category">Category:</label>
        <input type="text" class="control-input" id="categoryInput"
          placeholder="neko, waifu, etc." value="neko" />
      </div>
      <div class="control-group">
        <label class="control-label" data-lang-key="api-key">API Key:</label>
        <input type="text" class="control-input" id="apiKeyInput"
          placeholder="your_api_key_here" value="nbr_demo_key" />
      </div>
      <div class="control-group">
        <label class="control-label" data-lang-key="base-url">Base URL:</label>
        <input type="text" class="control-input" id="baseUrlInput"
          value="https://api.nebura.dev/v1" />
      </div>
      <button class="run-btn" onclick="updateCodeExample()"
        data-lang-key="update-code">Update Code</button>
    </div>

    <div class="codespace" style="flex: 1">
      <div class="codespace-header">
        <div class="language-tabs">
          <button class="lang-tab active"
            data-lang="javascript">JavaScript</button>
          <button class="lang-tab"
            data-lang="typescript">TypeScript</button>
          <button class="lang-tab" data-lang="python">Python</button>
          <button class="lang-tab" data-lang="go">Go</button>
          <button class="lang-tab" data-lang="rust">Rust</button>
          <button class="lang-tab" data-lang="java">Java</button>
          <button class="lang-tab" data-lang="cpp">C++</button>
          <button class="lang-tab" data-lang="c">C</button>
        </div>
        <div class="code-actions">
          <button class="code-btn" onclick="copyCode()"
            data-lang-key="copy">Copy</button>
          <button class="code-btn" onclick="downloadCode()"
            data-lang-key="download">Download</button>
        </div>
      </div>
      <div class="code-content" id="codeContent">
        <pre><code class="language-javascript" id="codeBlock">// JavaScript - Consume Nebura API (GET, POST, Auth, Error, Pagination, Axios)
// The code will update dynamically based on your selections above.
const NEBURA_API_KEY = 'nbr_demo_key';
const BASE_URL = 'https://api.nebura.dev/v1';

// Example: GET with Auth & Error Handling
async function getAnimeWaifu(category = 'neko') {
  try {
    const response = await fetch(`${BASE_URL}/anime/waifu/${category}`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${NEBURA_API_KEY}`,
        'Content-Type': 'application/json'
      }
    });
    if (response.status === 401) throw new Error('Unauthorized: Invalid API Key');
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    return await response.json();
  } catch (error) {
    console.error('API Error:', error);
    throw error;
  }
}

// Example: POST (Create Resource)
async function createAnime(data) {
  try {
    const response = await fetch(`${BASE_URL}/anime`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${NEBURA_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    return await response.json();
  } catch (error) {
    console.error('API Error:', error);
    throw error;
  }
}

// Example: Pagination & Filtering
async function getPaginatedAnime(page = 1, limit = 10, filter = '') {
  const url = `${BASE_URL}/anime?page=${page}&limit=${limit}&filter=${encodeURIComponent(filter)}`;
  const response = await fetch(url, {
    headers: { 'Authorization': `Bearer ${NEBURA_API_KEY}` }
  });
  return await response.json();
}

// Example: Using Axios (JS/React)
import axios from 'axios';
async function getAnimeWithAxios(category = 'neko') {
  try {
    const res = await axios.get(`${BASE_URL}/anime/waifu/${category}`, {
      headers: { 'Authorization': `Bearer ${NEBURA_API_KEY}` }
    });
    return res.data;
  } catch (err) {
    if (err.response && err.response.status === 401) {
      alert('Unauthorized: Check your API Key');
    }
    throw err;
  }
}

// Example usage
getAnimeWaifu('neko')
  .then(waifu => console.log('Waifu:', waifu))
  .catch(error => console.error('Error:', error));
              </code></pre>
      </div>
    </div>
  </div>

  <!-- Multi-language Examples -->
  <div class="dashboard-card" style="margin-top: 20px;">
    <div class="card-header">
      <div class="card-title" style="font-size: 16px;">
        Multi-language API Usage
      </div>
      <div class="card-icon">
        <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
          <path
            d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z" />
        </svg>
      </div>
    </div>
    <div style="padding: 20px;">
      <strong>Python (Requests):</strong>
      <pre><code class="language-python">
import requests

API_KEY = 'nbr_demo_key'
BASE_URL = 'https://api.nebura.dev/v1'

# GET with Auth & Error Handling
def get_anime_waifu(category='neko'):
    url = f"{BASE_URL}/anime/waifu/{category}"
    headers = {'Authorization': f'Bearer {API_KEY}'}
    r = requests.get(url, headers=headers)
    if r.status_code == 401:
        raise Exception('Unauthorized: Invalid API Key')
    r.raise_for_status()
    return r.json()

# POST Example
def create_anime(data):
    url = f"{BASE_URL}/anime"
    headers = {'Authorization': f'Bearer {API_KEY}', 'Content-Type': 'application/json'}
    r = requests.post(url, json=data, headers=headers)
    r.raise_for_status()
    return r.json()

# Pagination & Filtering
def get_paginated_anime(page=1, limit=10, filter=''):
    url = f"{BASE_URL}/anime?page={page}&limit={limit}&filter={filter}"
    headers = {'Authorization': f'Bearer {API_KEY}'}
    r = requests.get(url, headers=headers)
    r.raise_for_status()
    return r.json()
            </code></pre>

      <strong>Go:</strong>
      <pre><code class="language-go">
package main

import (
  "net/http"
  "fmt"
  "io/ioutil"
)

func main() {
  apiKey := "nbr_demo_key"
  baseUrl := "https://api.nebura.dev/v1"
  req, _ := http.NewRequest("GET", baseUrl+"/anime/waifu/neko", nil)
  req.Header.Set("Authorization", "Bearer "+apiKey)
  resp, err := http.DefaultClient.Do(req)
  if err != nil { panic(err) }
  defer resp.Body.Close()
  body, _ := ioutil.ReadAll(resp.Body)
  fmt.Println(string(body))
}
            </code></pre>

      <strong>Rust:</strong>
      <pre><code class="language-rust">
use reqwest::header::{HeaderMap, HeaderValue, AUTHORIZATION};
#[tokio::main]
async fn main() {
    let api_key = "nbr_demo_key";
    let url = "https://api.nebura.dev/v1/anime/waifu/neko";
    let mut headers = HeaderMap::new();
    headers.insert(AUTHORIZATION, HeaderValue::from_str(&format!("Bearer {}", api_key)).unwrap());
    let client = reqwest::Client::new();
    let res = client.get(url).headers(headers).send().await.unwrap();
    let json: serde_json::Value = res.json().await.unwrap();
    println!("{:?}", json);
}
            </code></pre>

      <strong>Java:</strong>
      <pre><code class="language-java">
import java.net.http.*;
import java.net.URI;

public class Example {
  public static void main(String[] args) throws Exception {
    String apiKey = "nbr_demo_key";
    String url = "https://api.nebura.dev/v1/anime/waifu/neko";
    HttpClient client = HttpClient.newHttpClient();
    HttpRequest request = HttpRequest.newBuilder()
      .uri(URI.create(url))
      .header("Authorization", "Bearer " + apiKey)
      .GET()
      .build();
    HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
    System.out.println(response.body());
  }
}
            </code></pre>
    </div>
  </div>
</div>